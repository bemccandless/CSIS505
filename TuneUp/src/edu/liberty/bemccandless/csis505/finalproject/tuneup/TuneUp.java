package edu.liberty.bemccandless.csis505.finalproject.tuneup;

import edu.liberty.bemccandless.csis505.finalproject.tuneup.config.DbConfig;
import edu.liberty.bemccandless.csis505.finalproject.tuneup.event.EventController;
import edu.liberty.bemccandless.csis505.finalproject.tuneup.event.EventService;
import edu.liberty.bemccandless.csis505.finalproject.tuneup.maintenance.MaintenanceController;
import edu.liberty.bemccandless.csis505.finalproject.tuneup.maintenance.MaintenanceService;
import edu.liberty.bemccandless.csis505.finalproject.tuneup.vehicle.Vehicle;
import edu.liberty.bemccandless.csis505.finalproject.tuneup.vehicle.VehicleController;
import edu.liberty.bemccandless.csis505.finalproject.tuneup.vehicle.VehicleService;
import java.sql.Date;
import java.sql.SQLException;
import java.text.DateFormat;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Enumeration;
import java.util.regex.Pattern;
import javax.swing.ComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.ListModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;
import javax.swing.table.TableModel;

/**
 *
 * @author bemccandless
 */
public class TuneUp extends javax.swing.JFrame {
    
    private final VehicleController vehicleController;
    private final MaintenanceController maintenanceController;
    private final EventController eventController;
    
    private boolean editMode;

    /**
     * Creates new form TuneUpGui
     */
    public TuneUp() {
        try {
            DbConfig.getDbConnection();
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(rootPane, "Unable to connection to database.", "SQL Error", JOptionPane.ERROR_MESSAGE);
            System.exit(1);
        }
        
        MaintenanceService maintenanceService = new MaintenanceService();
        VehicleService vehicleService = new VehicleService(maintenanceService);
        EventService eventService = new EventService();
        
        vehicleController = new VehicleController(vehicleService);
        maintenanceController = new MaintenanceController(maintenanceService);
        eventController = new EventController(eventService, vehicleService, maintenanceService);
        
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        addVehicleDialogBox = new javax.swing.JDialog();
        jLabel10 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        addDriverTextField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        addMakeTextField = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        addModelTextField = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        addYearTextField = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        addMileageTextField = new javax.swing.JTextField();
        addVehicleCancelBtn = new javax.swing.JButton();
        addVehicleSaveBtn = new javax.swing.JButton();
        addMaintenanceDialogBox = new javax.swing.JDialog();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        maintenanceDateTextField = new javax.swing.JFormattedTextField();
        maintenanceTypeComboBox = new javax.swing.JComboBox<>();
        jLabel18 = new javax.swing.JLabel();
        maintenanceMileageTextField = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        maintenancePriceTextField = new javax.swing.JFormattedTextField();
        addMaintenanceCancelBtn = new javax.swing.JButton();
        addMaintenanceSaveBtn = new javax.swing.JButton();
        jLabel21 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        upcomingMaintenanceList = new javax.swing.JList<>();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        vehicleList = new javax.swing.JList<>();
        removeVehicleBtn = new javax.swing.JButton();
        addVehicleBtn = new javax.swing.JButton();
        jPanel3 = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        vehicleMakeTextField = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        vehicleDriverTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        vehicleModelTextField = new javax.swing.JTextField();
        vehicleYearTextField = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        vehicleMileageTextField = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        vehicleMaintenanceTable = new javax.swing.JTable();
        removeVehicleMaintenanceBtn = new javax.swing.JButton();
        addVehicleMaintenanceBtn = new javax.swing.JButton();
        editVehicleBtn = new javax.swing.JButton();

        addVehicleDialogBox.setTitle("Add Vehicle");
        addVehicleDialogBox.setMinimumSize(new java.awt.Dimension(320, 240));
        addVehicleDialogBox.setResizable(false);
        addVehicleDialogBox.setSize(new java.awt.Dimension(0, 0));

        jLabel10.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel10.setText("Vehicle Information");

        jPanel6.setMinimumSize(new java.awt.Dimension(50, 10));
        jPanel6.setName("Vehicle Information"); // NOI18N
        jPanel6.setPreferredSize(new java.awt.Dimension(326, 251));

        jLabel11.setText("Driver");

        jLabel12.setText("Make");

        jLabel13.setText("Model");

        jLabel14.setText("Year");

        addYearTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addYearTextFieldActionPerformed(evt);
            }
        });
        addYearTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addYearTextFieldKeyTyped(evt);
            }
        });

        jLabel15.setText("Mileage");

        addMileageTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                addMileageTextFieldKeyTyped(evt);
            }
        });

        addVehicleCancelBtn.setText("Cancel");
        addVehicleCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVehicleCancelBtnActionPerformed(evt);
            }
        });

        addVehicleSaveBtn.setText("Save");
        addVehicleSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVehicleSaveBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(addDriverTextField))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel12)
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(addYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addMileageTextField))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(addMakeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel13)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(addModelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addVehicleSaveBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addVehicleCancelBtn)
                .addContainerGap())
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel11)
                    .addComponent(addDriverTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel12)
                    .addComponent(addMakeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel13)
                    .addComponent(addModelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(addYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15)
                    .addComponent(addMileageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addVehicleCancelBtn)
                    .addComponent(addVehicleSaveBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout addVehicleDialogBoxLayout = new javax.swing.GroupLayout(addVehicleDialogBox.getContentPane());
        addVehicleDialogBox.getContentPane().setLayout(addVehicleDialogBoxLayout);
        addVehicleDialogBoxLayout.setHorizontalGroup(
            addVehicleDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addVehicleDialogBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addVehicleDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(addVehicleDialogBoxLayout.createSequentialGroup()
                        .addComponent(jLabel10)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        addVehicleDialogBoxLayout.setVerticalGroup(
            addVehicleDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addVehicleDialogBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel10)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, 131, Short.MAX_VALUE)
                .addContainerGap())
        );

        addMaintenanceDialogBox.setTitle("Add Maintenance Item");
        addMaintenanceDialogBox.setMinimumSize(new java.awt.Dimension(300, 260));
        addMaintenanceDialogBox.setResizable(false);

        jLabel16.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel16.setText("Maintenance");

        jLabel17.setText("Date");

        maintenanceDateTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("MM/dd/yyyy"))));

        ComboBoxModel maintenanceTypeList = maintenanceController.getAllMaintenanceTypes();
        maintenanceTypeComboBox.setModel(maintenanceTypeList);

        jLabel18.setText("Type");

        jLabel19.setText("Mileage");

        jLabel20.setText("Price");

        maintenancePriceTextField.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("#0.00"))));

        addMaintenanceCancelBtn.setText("Cancel");
        addMaintenanceCancelBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMaintenanceCancelBtnActionPerformed(evt);
            }
        });

        addMaintenanceSaveBtn.setText("Save");
        addMaintenanceSaveBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addMaintenanceSaveBtnActionPerformed(evt);
            }
        });

        jLabel21.setText("[MM/DD/YYYY]");
        jLabel21.setToolTipText("");

        javax.swing.GroupLayout addMaintenanceDialogBoxLayout = new javax.swing.GroupLayout(addMaintenanceDialogBox.getContentPane());
        addMaintenanceDialogBox.getContentPane().setLayout(addMaintenanceDialogBoxLayout);
        addMaintenanceDialogBoxLayout.setHorizontalGroup(
            addMaintenanceDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMaintenanceDialogBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(addMaintenanceDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(addMaintenanceDialogBoxLayout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(addMaintenanceDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(addMaintenanceDialogBoxLayout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addComponent(jLabel17))
                            .addComponent(jLabel19)
                            .addComponent(jLabel18)
                            .addComponent(jLabel20))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(addMaintenanceDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(addMaintenanceDialogBoxLayout.createSequentialGroup()
                                .addComponent(maintenanceDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLabel21))
                            .addComponent(maintenanceTypeComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(maintenanceMileageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(maintenancePriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel16))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, addMaintenanceDialogBoxLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(addMaintenanceSaveBtn)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(addMaintenanceCancelBtn)
                .addContainerGap())
        );
        addMaintenanceDialogBoxLayout.setVerticalGroup(
            addMaintenanceDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(addMaintenanceDialogBoxLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel16)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addMaintenanceDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(maintenanceDateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addMaintenanceDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maintenanceTypeComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addMaintenanceDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(maintenanceMileageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel19))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(addMaintenanceDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(maintenancePriceTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(addMaintenanceDialogBoxLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(addMaintenanceCancelBtn)
                    .addComponent(addMaintenanceSaveBtn))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("TuneUp - Vehicle Maintenance Tracker");
        setMinimumSize(new java.awt.Dimension(800, 600));
        setName("appFrame"); // NOI18N
        setResizable(false);
        setSize(new java.awt.Dimension(800, 600));

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel1.setText("Upcoming Maintenance");

        try {
            Vehicle selectedVehicle = vehicleList.getSelectedValue();
            if (selectedVehicle != null) {
                upcomingMaintenanceList.setModel(eventController.getAllEventsForVehicle(selectedVehicle)
                );
                upcomingMaintenanceList.setFixedCellHeight(15);
            }
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(rootPane, "Unable to obtain upcoming maintenance items.", "SQL Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                DbConfig.close();
            } catch (SQLException ex) {
                System.err.println(ex);
            }
        }
        jScrollPane1.setViewportView(upcomingMaintenanceList);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(0, 146, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 518, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel2.setText("Vehicles");

        vehicleList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        vehicleList.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                vehicleListValueChanged(evt);
            }
        });
        jScrollPane2.setViewportView(vehicleList);
        populateVehicleList();

        removeVehicleBtn.setText("Remove");
        removeVehicleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeVehicleBtnActionPerformed(evt);
            }
        });

        addVehicleBtn.setText("Add");
        addVehicleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVehicleBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addVehicleBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeVehicleBtn))
                    .addComponent(jScrollPane2))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(removeVehicleBtn)
                    .addComponent(addVehicleBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jLabel3.setFont(new java.awt.Font("Dialog", 0, 16)); // NOI18N
        jLabel3.setText("Vehicle Information");

        jPanel4.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(153, 153, 153)));

        jLabel4.setText("Driver");

        vehicleMakeTextField.setEditable(false);

        jLabel5.setText("Make");

        vehicleDriverTextField.setEditable(false);

        jLabel6.setText("Model");

        vehicleModelTextField.setEditable(false);

        vehicleYearTextField.setEditable(false);

        jLabel7.setText("Year");

        jLabel8.setText("Mileage");

        vehicleMileageTextField.setEditable(false);

        jLabel9.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        jLabel9.setText("Maintenance");

        try {
            Vehicle vehicle = vehicleList.getSelectedValue();
            if (vehicle != null) {
                vehicleMaintenanceTable.setModel(maintenanceController.getMaintenanceItemsByVehicle(vehicle));
                vehicleMaintenanceTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
                // Hide the ID and VEHICLE_ID column from view, but still able to maintain
                // them in the model for when removing items.
                TableColumnModel columnModel = vehicleMaintenanceTable.getColumnModel();
                Enumeration columns = columnModel.getColumns();

                TableColumn column = null;
                boolean removed = false;
                while (columns.hasMoreElements()) {
                    if (!removed) {
                        column = (TableColumn) columns.nextElement();
                    }
                    removed = false;

                    if (column != null) {
                        if (column.getHeaderValue().equals("ID")) {
                            TableColumn tempColumn = column;
                            column = (TableColumn) columns.nextElement();
                            columnModel.removeColumn(tempColumn);
                            removed = true;
                        } else if (column.getHeaderValue().equals("VEHICLE_ID")) {
                            TableColumn tempColumn = column;
                            column = (TableColumn) columns.nextElement();
                            columnModel.removeColumn(tempColumn);
                            removed = true;
                        }
                    }
                }
            }
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(rootPane, "Unable to obtain maintenance items for vehicle", "SQL Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                DbConfig.close();
            } catch (SQLException ex) {
                System.err.println(ex);
            }
        }
        jScrollPane3.setViewportView(vehicleMaintenanceTable);

        removeVehicleMaintenanceBtn.setText("Remove");
        removeVehicleMaintenanceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                removeVehicleMaintenanceBtnActionPerformed(evt);
            }
        });

        addVehicleMaintenanceBtn.setText("Add");
        addVehicleMaintenanceBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addVehicleMaintenanceBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(addVehicleMaintenanceBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(removeVehicleMaintenanceBtn)))
                .addContainerGap())
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(removeVehicleMaintenanceBtn)
                    .addComponent(addVehicleMaintenanceBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 193, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel5)
                                    .addComponent(jLabel7))
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jLabel6)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(vehicleModelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 141, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addGap(9, 9, 9)
                                        .addComponent(vehicleYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(20, 20, 20)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(vehicleMileageTextField))))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(vehicleMakeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 216, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(vehicleDriverTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(17, 17, 17))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(vehicleDriverTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vehicleMakeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(vehicleModelTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(vehicleYearTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(vehicleMileageTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        editVehicleBtn.setText("Edit");
        editVehicleBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editVehicleBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(editVehicleBtn)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(editVehicleBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addVehicleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVehicleBtnActionPerformed
        toggleAllButtonsEnabled(false);
        addVehicleDialogBox.setVisible(true);
    }//GEN-LAST:event_addVehicleBtnActionPerformed

    private void addVehicleSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVehicleSaveBtnActionPerformed
        Vehicle vehicle;
        if (editMode) {
            vehicle = vehicleList.getSelectedValue();
        } else {
            vehicle = new Vehicle();
        }
        
        vehicle.setDriver(addDriverTextField.getText());
        vehicle.setMake(addMakeTextField.getText());
        vehicle.setModel(addModelTextField.getText());
        vehicle.setYear(Integer.valueOf(addYearTextField.getText()));
        vehicle.setMileage(Integer.valueOf(addMileageTextField.getText()));
        
        if (vehicle.getDriver().length() > 30) {
            JOptionPane.showMessageDialog(rootPane, "'Driver' must be less than 30 characters", "Invalid Entry", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (vehicle.getMake().length() > 20) {
            JOptionPane.showMessageDialog(rootPane, "'Make' must be less than 20 characters", "Invalid Entry", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (vehicle.getModel().length() > 20) {
            JOptionPane.showMessageDialog(rootPane, "'Model' must be less than 20 characters", "Invalid Entry", JOptionPane.ERROR_MESSAGE);
            return;
        } else if (String.valueOf(vehicle.getYear()).length() < 4) {
            JOptionPane.showMessageDialog(rootPane, "'Year' must be 4 digits", "Invalid Entry", JOptionPane.ERROR_MESSAGE);
            return;
        }
        
        try {
            if (editMode) {
                vehicleController.editVehicle(vehicle);
            } else {
                vehicleController.addVehicle(vehicle);
            }
            populateVehicleList();
            vehicleList.setSelectedValue(vehicle, true);
            vehicleList.requestFocusInWindow();
            
            clearAddVehicleTextFields();
            addVehicleDialogBox.setVisible(false);
            toggleAllButtonsEnabled(true);
            editMode = false;
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(rootPane, "Unable to add vehicle", "SQL Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                DbConfig.close();
            } catch (SQLException ex) {
                System.err.println(ex);
            }
        }
    }//GEN-LAST:event_addVehicleSaveBtnActionPerformed

    private void toggleAllButtonsEnabled(boolean enabled) {
        addVehicleBtn.setEnabled(enabled);
        removeVehicleBtn.setEnabled(enabled);
        editVehicleBtn.setEnabled(enabled);
        addVehicleMaintenanceBtn.setEnabled(enabled);
        removeVehicleMaintenanceBtn.setEnabled(enabled);
    }
    
    private void populateVehicleList() {
        try {
            ListModel<Vehicle> vehicleListModel = vehicleController.getAllVehicles();
            vehicleList.setModel(vehicleListModel);
            if (vehicleListModel.getSize() != 0 && vehicleList.getSelectedIndex() == -1) {
                vehicleList.setSelectedIndex(0);
                vehicleList.ensureIndexIsVisible(0);
                vehicleList.requestFocusInWindow();
            }
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(rootPane, "Unable to obtain list of vehicles.", "SQL Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                DbConfig.close();
            } catch (SQLException ex) {
                System.err.println(ex);
            }
        }
    }
    
    private void addVehicleCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVehicleCancelBtnActionPerformed
        editMode = false;
        clearAddVehicleTextFields();
        toggleAllButtonsEnabled(true);
        addVehicleDialogBox.setVisible(false);
    }//GEN-LAST:event_addVehicleCancelBtnActionPerformed

    private void vehicleListValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_vehicleListValueChanged
        Vehicle selectedVehicle = vehicleList.getSelectedValue();
        if (selectedVehicle == null) {
            return;
        }
        
        populateVehicleMaintenanceTable(selectedVehicle);
        populateVehicleInformationFields(selectedVehicle);
        populateUpcomingMaintenanceList(selectedVehicle);
    }//GEN-LAST:event_vehicleListValueChanged

    private void addYearTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addYearTextFieldActionPerformed

    }//GEN-LAST:event_addYearTextFieldActionPerformed

    private void addYearTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addYearTextFieldKeyTyped
        if (addYearTextField.getText().length() == 4) {
            evt.consume();
        } else if (!Pattern.matches("[0-9]", String.valueOf(evt.getKeyChar())) || evt.getKeyChar() == '\b') {
            evt.consume();
        }
    }//GEN-LAST:event_addYearTextFieldKeyTyped

    private void addMileageTextFieldKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addMileageTextFieldKeyTyped
        if (!Pattern.matches("[0-9]", String.valueOf(evt.getKeyChar())) || evt.getKeyChar() == '\b') {
            evt.consume();
        }
    }//GEN-LAST:event_addMileageTextFieldKeyTyped

    private void removeVehicleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeVehicleBtnActionPerformed
        Vehicle vehicle = vehicleList.getSelectedValue();
        if (vehicle == null) {
            return;
        }
        
        try {
            vehicleController.deleteVehicle(vehicle);
            populateVehicleList();
            
            if (vehicleList.getModel().getSize() == 0) {
                vehicleMaintenanceTable.setModel(new DefaultTableModel());
            }
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(rootPane, String.format("Unable to delete vehicle [%s].", vehicle), "SQL Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                DbConfig.close();
            } catch (SQLException ex) {
                System.err.println(ex);
            }
        }
    }//GEN-LAST:event_removeVehicleBtnActionPerformed

    private void editVehicleBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editVehicleBtnActionPerformed
        editMode = true;
        toggleAllButtonsEnabled(false);
        
        Vehicle vehicle = vehicleList.getSelectedValue();
        addDriverTextField.setText(vehicle.getDriver());
        addMakeTextField.setText(vehicle.getMake());
        addModelTextField.setText(vehicle.getModel());
        addYearTextField.setText(String.valueOf(vehicle.getYear()));
        addMileageTextField.setText(String.valueOf(vehicle.getMileage()));
        
        addVehicleDialogBox.setVisible(true);
    }//GEN-LAST:event_editVehicleBtnActionPerformed

    private void addVehicleMaintenanceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addVehicleMaintenanceBtnActionPerformed
        toggleAllButtonsEnabled(false);
        addMaintenanceDialogBox.setVisible(true);
    }//GEN-LAST:event_addVehicleMaintenanceBtnActionPerformed

    private void addMaintenanceSaveBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMaintenanceSaveBtnActionPerformed
        try {
            DateFormat dateFormatter = new SimpleDateFormat("MM/dd/yyyy");
            maintenanceController.addMaintenanceItem(
                    vehicleList.getSelectedValue(),
                    maintenanceTypeComboBox.getSelectedItem().toString(),
                    Integer.valueOf(maintenanceMileageTextField.getText()),
                    new Date(dateFormatter.parse(maintenanceDateTextField.getText()).getTime()),
                    Double.valueOf(maintenancePriceTextField.getText()));
            
            Vehicle vehicle = vehicleList.getSelectedValue();
            
            populateVehicleMaintenanceTable(vehicle);
            
            maintenanceDateTextField.setText("");
            maintenanceTypeComboBox.setSelectedIndex(-1);
            maintenanceMileageTextField.setText("");
            maintenancePriceTextField.setText("");
            
            toggleAllButtonsEnabled(true);
            addMaintenanceDialogBox.setVisible(false);
        } catch (ParseException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(rootPane, "Invalid service date format.", "Parse Error", JOptionPane.ERROR_MESSAGE);
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(rootPane, "Unable to add maintenance item", "SQL Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                DbConfig.close();
            } catch (SQLException ex) {
                System.err.println(ex);
            }
        }
    }//GEN-LAST:event_addMaintenanceSaveBtnActionPerformed

    private void addMaintenanceCancelBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addMaintenanceCancelBtnActionPerformed
        toggleAllButtonsEnabled(true);
        addMaintenanceDialogBox.setVisible(false);
    }//GEN-LAST:event_addMaintenanceCancelBtnActionPerformed

    private void removeVehicleMaintenanceBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_removeVehicleMaintenanceBtnActionPerformed
        try {
            if (vehicleMaintenanceTable.getSelectedRow() == -1) {
                return;
            }
            
            int maintenanceItemId = (int) vehicleMaintenanceTable.getModel().getValueAt(vehicleMaintenanceTable.getSelectedRow(), 0);
            maintenanceController.deleteMaintenanceItem(maintenanceItemId);
            
            populateVehicleMaintenanceTable(vehicleList.getSelectedValue());
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(rootPane, "Unable to delete maintenance item", "SQL Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                DbConfig.close();
            } catch (SQLException ex) {
                System.err.println(ex);
            }
        }
    }//GEN-LAST:event_removeVehicleMaintenanceBtnActionPerformed

    private void populateVehicleMaintenanceTable(Vehicle vehicle) {
        try {
            TableModel tableModel =  maintenanceController.getMaintenanceItemsByVehicle(vehicle);
            vehicleMaintenanceTable.setModel(tableModel);
            
            if (tableModel.getRowCount() > 0) {
                vehicleMaintenanceTable.setRowSelectionInterval(0, 0);
            }

            // Hide the ID and VEHICLE_ID column from view, but still able to maintain
            // them in the model for when removing items.
            TableColumnModel columnModel = vehicleMaintenanceTable.getColumnModel();
            Enumeration columns = columnModel.getColumns();
            
            TableColumn column = null;
            boolean removed = false;
            while (columns.hasMoreElements()) {
                if (!removed) {
                    column = (TableColumn) columns.nextElement();
                }
                removed = false;
                
                if (column != null) {
                    if (column.getHeaderValue().equals("ID")) {
                        TableColumn tempColumn = column;
                        column = (TableColumn) columns.nextElement();
                        columnModel.removeColumn(tempColumn);
                        removed = true;
                    } else if (column.getHeaderValue().equals("VEHICLE_ID")) {
                        TableColumn tempColumn = column;
                        column = (TableColumn) columns.nextElement();
                        columnModel.removeColumn(tempColumn);
                        removed = true;
                    }
                }
            }
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(rootPane, "Unable to obtain maintenance items for vehicle", "SQL Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                DbConfig.close();
            } catch (SQLException ex) {
                System.err.println(ex);
            }
        }
    }
    
    private void populateUpcomingMaintenanceList(Vehicle vehicle) {
        try {
            if (vehicle != null) {
                upcomingMaintenanceList.setModel(eventController.getAllEventsForVehicle(vehicle));
            }
        } catch (SQLException ex) {
            System.err.println(ex);
            JOptionPane.showMessageDialog(rootPane, "Unable to obtain upcoming maintenance items.", "SQL Error", JOptionPane.ERROR_MESSAGE);
        } finally {
            try {
                DbConfig.close();
            } catch (SQLException ex) {
                System.err.println(ex);
            }
        }
    }
    
    private void populateVehicleInformationFields(Vehicle vehicle) {
        vehicleDriverTextField.setText(vehicle.getDriver());
        vehicleMakeTextField.setText(vehicle.getMake());
        vehicleModelTextField.setText(vehicle.getModel());
        vehicleYearTextField.setText(String.valueOf(vehicle.getYear()));
        vehicleMileageTextField.setText(String.valueOf(vehicle.getMileage()));
    }
    
    private void clearAddVehicleTextFields() {
        addDriverTextField.setText("");
        addMakeTextField.setText("");
        addModelTextField.setText("");
        addYearTextField.setText("");
        addMileageTextField.setText("");
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TuneUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TuneUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TuneUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TuneUp.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new TuneUp().setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField addDriverTextField;
    private javax.swing.JButton addMaintenanceCancelBtn;
    private javax.swing.JDialog addMaintenanceDialogBox;
    private javax.swing.JButton addMaintenanceSaveBtn;
    private javax.swing.JTextField addMakeTextField;
    private javax.swing.JTextField addMileageTextField;
    private javax.swing.JTextField addModelTextField;
    private javax.swing.JButton addVehicleBtn;
    private javax.swing.JButton addVehicleCancelBtn;
    private javax.swing.JDialog addVehicleDialogBox;
    private javax.swing.JButton addVehicleMaintenanceBtn;
    private javax.swing.JButton addVehicleSaveBtn;
    private javax.swing.JTextField addYearTextField;
    private javax.swing.JButton editVehicleBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JFormattedTextField maintenanceDateTextField;
    private javax.swing.JTextField maintenanceMileageTextField;
    private javax.swing.JFormattedTextField maintenancePriceTextField;
    private javax.swing.JComboBox<String> maintenanceTypeComboBox;
    private javax.swing.JButton removeVehicleBtn;
    private javax.swing.JButton removeVehicleMaintenanceBtn;
    private javax.swing.JList<String> upcomingMaintenanceList;
    private javax.swing.JTextField vehicleDriverTextField;
    private javax.swing.JList<Vehicle> vehicleList;
    private javax.swing.JTable vehicleMaintenanceTable;
    private javax.swing.JTextField vehicleMakeTextField;
    private javax.swing.JTextField vehicleMileageTextField;
    private javax.swing.JTextField vehicleModelTextField;
    private javax.swing.JTextField vehicleYearTextField;
    // End of variables declaration//GEN-END:variables
}
